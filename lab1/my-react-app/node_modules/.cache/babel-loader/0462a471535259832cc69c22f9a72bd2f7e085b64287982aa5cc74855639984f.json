{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u043D\\u0456\\u043A\\\\\\u041B\\u0430\\u0431\\u0438\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u041A\\u041E\\u041F\\\\lab1\\\\my-react-app\\\\src\\\\SudokuBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Sudoku.css'; // Створюємо базову стилізацію для гри\n\n// Компонент для однієї клітинки\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SudokuCell = ({\n  value,\n  onClick,\n  onChange,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: `sudoku-cell ${isSelected ? 'selected' : ''}`,\n    value: value,\n    onClick: onClick,\n    onChange: e => {\n      const val = e.target.value;\n      // Перевіряємо, чи ввели число від 1 до 9\n      if (/^[1-9]?$/.test(val)) {\n        onChange(val);\n      }\n    },\n    maxLength: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент для гри судоку\n_c = SudokuCell;\nconst SudokuBoard = () => {\n  _s();\n  // Ініціалізуємо поле судоку (9х9)\n  const initialBoard = Array(9).fill(null).map(() => Array(9).fill(''));\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n\n  // Оновлення значення клітинки\n  const handleCellChange = (row, col, value) => {\n    const newBoard = [...board];\n    newBoard[row][col] = value;\n    setBoard(newBoard);\n  };\n\n  // Вибір клітинки\n  const handleCellClick = (row, col) => {\n    setSelectedCell({\n      row,\n      col\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sudoku-board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-row\",\n      children: row.map((value, colIndex) => /*#__PURE__*/_jsxDEV(SudokuCell, {\n        value: value,\n        isSelected: selectedCell.row === rowIndex && selectedCell.col === colIndex,\n        onClick: () => handleCellClick(rowIndex, colIndex),\n        onChange: val => handleCellChange(rowIndex, colIndex, val)\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SudokuBoard, \"JfoVG9ksEskkzB2VLyHx/M0/MLA=\");\n_c2 = SudokuBoard;\nexport default SudokuBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SudokuCell\");\n$RefreshReg$(_c2, \"SudokuBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SudokuCell","value","onClick","onChange","isSelected","type","className","e","val","target","test","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","SudokuBoard","_s","initialBoard","Array","fill","map","board","setBoard","selectedCell","setSelectedCell","row","col","handleCellChange","newBoard","handleCellClick","children","rowIndex","colIndex","_c2","$RefreshReg$"],"sources":["D:/унік/Лаби/3 курс/1 семестр/КОП/lab1/my-react-app/src/SudokuBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Sudoku.css'; // Створюємо базову стилізацію для гри\r\n\r\n// Компонент для однієї клітинки\r\nconst SudokuCell = ({ value, onClick, onChange, isSelected }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className={`sudoku-cell ${isSelected ? 'selected' : ''}`}\r\n      value={value}\r\n      onClick={onClick}\r\n      onChange={(e) => {\r\n        const val = e.target.value;\r\n        // Перевіряємо, чи ввели число від 1 до 9\r\n        if (/^[1-9]?$/.test(val)) {\r\n          onChange(val);\r\n        }\r\n      }}\r\n      maxLength=\"1\"\r\n    />\r\n  );\r\n};\r\n\r\n// Компонент для гри судоку\r\nconst SudokuBoard = () => {\r\n  // Ініціалізуємо поле судоку (9х9)\r\n  const initialBoard = Array(9)\r\n    .fill(null)\r\n    .map(() => Array(9).fill(''));\r\n\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n\r\n  // Оновлення значення клітинки\r\n  const handleCellChange = (row, col, value) => {\r\n    const newBoard = [...board];\r\n    newBoard[row][col] = value;\r\n    setBoard(newBoard);\r\n  };\r\n\r\n  // Вибір клітинки\r\n  const handleCellClick = (row, col) => {\r\n    setSelectedCell({ row, col });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sudoku-board\">\r\n      {board.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"sudoku-row\">\r\n          {row.map((value, colIndex) => (\r\n            <SudokuCell\r\n              key={colIndex}\r\n              value={value}\r\n              isSelected={\r\n                selectedCell.row === rowIndex && selectedCell.col === colIndex\r\n              }\r\n              onClick={() => handleCellClick(rowIndex, colIndex)}\r\n              onChange={(val) => handleCellChange(rowIndex, colIndex, val)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SudokuBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}