{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u043D\\u0456\\u043A\\\\\\u041B\\u0430\\u0431\\u0438\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\1 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u041A\\u041E\\u041F\\\\lab1\\\\my-react-app\\\\src\\\\SudokuBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Sudoku.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SudokuCell = ({\n  value,\n  onClick,\n  onChange,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: `sudoku-cell ${isSelected ? 'selected' : ''}`,\n      value: value,\n      onClick: onClick,\n      onChange: e => {\n        const val = e.target.value;\n        if (/^[1-9]?$/.test(val)) {\n          onChange(val);\n        }\n      },\n      maxLength: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = SudokuCell;\nconst SudokuBoard = () => {\n  _s();\n  const initialBoard = Array(9).fill(null).map(() => Array(9).fill(''));\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const handleCellChange = (row, col, value) => {\n    const newBoard = [...board];\n    newBoard[row][col] = value;\n    setBoard(newBoard);\n  };\n  const handleCellClick = (row, col) => {\n    setSelectedCell({\n      row,\n      col\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"sudoku-board\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((value, colIndex) => /*#__PURE__*/_jsxDEV(SudokuCell, {\n          value: value,\n          isSelected: selectedCell.row === rowIndex && selectedCell.col === colIndex,\n          onClick: () => handleCellClick(rowIndex, colIndex),\n          onChange: val => handleCellChange(rowIndex, colIndex, val)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SudokuBoard, \"JfoVG9ksEskkzB2VLyHx/M0/MLA=\");\n_c2 = SudokuBoard;\nexport default SudokuBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SudokuCell\");\n$RefreshReg$(_c2, \"SudokuBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SudokuCell","value","onClick","onChange","isSelected","children","type","className","e","val","target","test","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","SudokuBoard","_s","initialBoard","Array","fill","map","board","setBoard","selectedCell","setSelectedCell","row","col","handleCellChange","newBoard","handleCellClick","rowIndex","colIndex","_c2","$RefreshReg$"],"sources":["D:/унік/Лаби/3 курс/1 семестр/КОП/lab1/my-react-app/src/SudokuBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Sudoku.css';\r\n\r\nconst SudokuCell = ({ value, onClick, onChange, isSelected }) => {\r\n  return (\r\n    <td>\r\n      <input\r\n        type=\"text\"\r\n        className={`sudoku-cell ${isSelected ? 'selected' : ''}`}\r\n        value={value}\r\n        onClick={onClick}\r\n        onChange={(e) => {\r\n          const val = e.target.value;\r\n          if (/^[1-9]?$/.test(val)) {\r\n            onChange(val);\r\n          }\r\n        }}\r\n        maxLength=\"1\"\r\n      />\r\n    </td>\r\n  );\r\n};\r\n\r\nconst SudokuBoard = () => {\r\n  const initialBoard = Array(9)\r\n    .fill(null)\r\n    .map(() => Array(9).fill(''));\r\n\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n\r\n  const handleCellChange = (row, col, value) => {\r\n    const newBoard = [...board];\r\n    newBoard[row][col] = value;\r\n    setBoard(newBoard);\r\n  };\r\n\r\n  const handleCellClick = (row, col) => {\r\n    setSelectedCell({ row, col });\r\n  };\r\n\r\n  return (\r\n    <table className=\"sudoku-board\">\r\n      <tbody>\r\n        {board.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {row.map((value, colIndex) => (\r\n              <SudokuCell\r\n                key={colIndex}\r\n                value={value}\r\n                isSelected={\r\n                  selectedCell.row === rowIndex && selectedCell.col === colIndex\r\n                }\r\n                onClick={() => handleCellClick(rowIndex, colIndex)}\r\n                onChange={(val) => handleCellChange(rowIndex, colIndex, val)}\r\n              />\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SudokuBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}